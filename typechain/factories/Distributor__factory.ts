/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Distributor, DistributorInterface } from "../Distributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_OKP",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_epochLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nextEpochBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "OKP",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardRate",
        type: "uint256",
      },
    ],
    name: "addRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "adjustments",
    outputs: [
      {
        internalType: "bool",
        name: "add",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "target",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distribute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "epochLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "info",
    outputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEpochBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "nextRewardAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "nextRewardFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "policy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pullPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newPolicy_",
        type: "address",
      },
    ],
    name: "pushPolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "removeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePolicy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_add",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_target",
        type: "uint256",
      },
    ],
    name: "setAdjustment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epochLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nextEpochBlock",
        type: "uint256",
      },
    ],
    name: "setEpochData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516110893803806110898339818101604052608081101561003357600080fd5b5080516020820151604080840151606090940151600080546001600160a01b031916331780825592519495939491926001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b0384166100a457600080fd5b6001600160601b0319606085901b1660a0526001600160a01b0383166100c957600080fd5b606083811b6001600160601b03191660805260029290925560035560a0516001600160a01b0390921692501c610f6d61011c60003980610593528061086452508061075852806107ef5250610f6d6000f3fe608060405234801561001057600080fd5b506004361061011a5760003560e01c806361d027b3116100b2578063c9fa8b2a11610081578063e4fc6b6d11610066578063e4fc6b6d146102bf578063f7982243146102db578063fe3fbbad146103075761011a565b8063c9fa8b2a1461029a578063d985468c146102b75761011a565b806361d027b314610227578063a15ad0771461022f578063a4b2398014610255578063bc3b2b121461025d5761011a565b806343fb0571116100ee57806343fb0571146101c157806357d775f8146101e65780635beede08146101ee5780635db854b0146101f65761011a565b8062640c2e1461011f5780630505c8c9146101395780632e3405991461015d57806336d33f441461019b575b600080fd5b610127610333565b60408051918252519081900360200190f35b610141610339565b604080516001600160a01b039092168252519081900360200190f35b61017a6004803603602081101561017357600080fd5b5035610349565b604080519283526001600160a01b0390911660208301528051918290030190f35b610127600480360360208110156101b157600080fd5b50356001600160a01b0316610380565b6101e4600480360360408110156101d757600080fd5b5080359060200135610403565b005b61012761046d565b6101e4610473565b6101e46004803603608081101561020c57600080fd5b508035906020810135151590604081013590606001356104eb565b610141610591565b6101e46004803603602081101561024557600080fd5b50356001600160a01b03166105b5565b6101e461067b565b61027a6004803603602081101561027357600080fd5b5035610724565b604080519315158452602084019290925282820152519081900360600190f35b610127600480360360208110156102b057600080fd5b5035610749565b6101416107ed565b6102c7610811565b604080519115158252519081900360200190f35b6101e4600480360360408110156102f157600080fd5b506001600160a01b038135169060200135610954565b6101e46004803603604081101561031d57600080fd5b50803590602001356001600160a01b0316610a5b565b60035481565b6000546001600160a01b03165b90565b6005818154811061035957600080fd5b6000918252602090912060029091020180546001909101549091506001600160a01b031682565b60008060005b6005548110156103fc57836001600160a01b0316600582815481106103a757fe5b60009182526020909120600160029092020101546001600160a01b031614156103f4576103f1600582815481106103da57fe5b906000526020600020906002020160000154610749565b91505b600101610386565b5092915050565b6000546001600160a01b03163314610462576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600291909155600355565b60025481565b6001546001600160a01b0316331461048a57600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600154600080546001600160a01b0319166001600160a01b03909216919091179055565b6000546001600160a01b0316331461054a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60408051606081018252931515845260208085019384528482019283526000958652600490529093209151825460ff19169015151782555160018201559051600290910155565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b03163314610614576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166106595760405162461bcd60e51b8152600401808060200182810382526026815260200180610f1a6026913960400191505060405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146106da576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60046020526000908152604090208054600182015460029092015460ff909116919083565b60006107e7620f42406107e1847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107af57600080fd5b505afa1580156107c3573d6000803e3d6000fd5b505050506040513d60208110156107d957600080fd5b505190610b5a565b90610bba565b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000436003541161094c5760025460035461082b91610bfc565b60035560005b6005548110156109425760006005828154811061084a57fe5b906000526020600020906002020160000154111561093a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636a20de926005838154811061089e57fe5b906000526020600020906002020160010160009054906101000a90046001600160a01b03166108d3600585815481106103da57fe5b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561091957600080fd5b505af115801561092d573d6000803e3d6000fd5b5050505061093a81610c56565b600101610831565b5060019050610346565b506000610346565b6000546001600160a01b031633146109b3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0382166109c657600080fd5b604080518082019091529081526001600160a01b03918216602082019081526005805460018101825560009190915291517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600290930292830155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db190910180546001600160a01b03191691909216179055565b6000546001600160a01b03163314610aba576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60058281548110610ac757fe5b60009182526020909120600160029092020101546001600160a01b03828116911614610af257600080fd5b600060058381548110610b0157fe5b906000526020600020906002020160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600060058381548110610b4557fe5b60009182526020909120600290910201555050565b600082610b69575060006107e7565b82820282848281610b7657fe5b0414610bb35760405162461bcd60e51b8152600401808060200182810382526021815260200180610f406021913960400191505060405180910390fd5b9392505050565b6000610bb383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610dbd565b600082820183811015610bb3576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b610c5e610ef6565b506000818152600460209081526040918290208251606081018452815460ff161515815260018201549281018390526002909101549281019290925215610db957805115610d3257610cd2816020015160058481548110610cbb57fe5b600091825260209091206002909102015490610bfc565b60058381548110610cdf57fe5b600091825260209091206002909102015560408101516005805484908110610d0357fe5b90600052602060002090600202016000015410610d2d576000828152600460205260408120600101555b610db9565b610d5e816020015160058481548110610d4757fe5b600091825260209091206002909102015490610e5f565b60058381548110610d6b57fe5b600091825260209091206002909102015560408101516005805484908110610d8f57fe5b90600052602060002090600202016000015411610db9576000828152600460205260408120600101555b5050565b60008183610e495760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e0e578181015183820152602001610df6565b50505050905090810190601f168015610e3b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581610e5557fe5b0495945050505050565b6000610bb383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060008184841115610eee5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610e0e578181015183820152602001610df6565b505050900390565b60405180606001604052806000151581526020016000815260200160008152509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a164736f6c6343000705000a";

export class Distributor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _treasury: string,
    _OKP: string,
    _epochLength: BigNumberish,
    _nextEpochBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Distributor> {
    return super.deploy(
      _treasury,
      _OKP,
      _epochLength,
      _nextEpochBlock,
      overrides || {}
    ) as Promise<Distributor>;
  }
  getDeployTransaction(
    _treasury: string,
    _OKP: string,
    _epochLength: BigNumberish,
    _nextEpochBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treasury,
      _OKP,
      _epochLength,
      _nextEpochBlock,
      overrides || {}
    );
  }
  attach(address: string): Distributor {
    return super.attach(address) as Distributor;
  }
  connect(signer: Signer): Distributor__factory {
    return super.connect(signer) as Distributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistributorInterface {
    return new utils.Interface(_abi) as DistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Distributor {
    return new Contract(address, _abi, signerOrProvider) as Distributor;
  }
}
